import { NextRequest, NextResponse } from 'next/server'

interface OrderItem {
  title: string
  quantity: number
  price: number
}

interface OrderData {
  name: string
  phone: string
  items: OrderItem[]
  total: number
  discount: number
}

export async function POST(request: NextRequest) {
  try {
    const orderData: OrderData = await request.json()

    const { name, phone, items, total, discount } = orderData

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const botToken = process.env.TELEGRAM_BOT_TOKEN
    const channelId = process.env.TELEGRAM_CHANNEL_ID

    if (!botToken || !channelId) {
      console.error('Telegram credentials not configured')
      return NextResponse.json(
        { error: 'Server configuration error' },
        { status: 500 }
      )
    }

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    const itemsList = items
      .map(
        (item) =>
          `- ${item.title} (${item.quantity} —à—Ç\\.) \\- ${item.price.toLocaleString()} BYN`
      )
      .join('\n')

    const message = `üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑\\!*

*–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*
üë§ –ò–º—è: \`${name.replace(/[_*[\]()~`>#+\-=|{}.!]/g, '\\$&')}\`
üìû –¢–µ–ª–µ—Ñ–æ–Ω: \`${phone.replace(/[_*[\]()~`>#+\-=|{}.!]/g, '\\$&')}\`

*–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*
${itemsList}

*\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-*
${discount > 0 ? `–°–∫–∏–¥–∫–∞: \\-${discount.toLocaleString()} BYN\n` : ''}*–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: ${total.toLocaleString()} BYN*`

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    const telegramApiUrl = `https://api.telegram.org/bot${botToken}/sendMessage`

    const telegramResponse = await fetch(telegramApiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: channelId,
        text: message,
        parse_mode: 'MarkdownV2',
      }),
    })

    if (!telegramResponse.ok) {
      const errorData = await telegramResponse.json()
      console.error('Telegram API error:', errorData)
      return NextResponse.json(
        { error: 'Failed to send order to Telegram' },
        { status: 500 }
      )
    }

    return NextResponse.json({ success: true }, { status: 200 })
  } catch (error) {
    console.error('Error processing order:', error)
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    )
  }
}
